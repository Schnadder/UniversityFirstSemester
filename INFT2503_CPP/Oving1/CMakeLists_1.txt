# CMakeList.txt : CMake project for Oving1working, include source and define
# project specific logic here.
#
cmake_minimum_required (VERSION 3.8)

# Enable Hot Reload for MSVC compilers if supported.
if (POLICY CMP0141)
  cmake_policy(SET CMP0141 NEW)
  set(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT "$<IF:$<AND:$<C_COMPILER_ID:MSVC>,$<CXX_COMPILER_ID:MSVC>>,$<$<CONFIG:Debug,RelWithDebInfo>:EditAndContinue>,$<$<CONFIG:Debug,RelWithDebInfo>:ProgramDatabase>>")
endif()

project ("Oving1working")

# Add source to this project's executable.
add_executable (Oving1a "Oving1a.cpp")
add_executable (Oving1b "Oving1b.cpp")

if (CMAKE_VERSION VERSION_GREATER 3.12)
  set_property(TARGET Oving1a PROPERTY CXX_STANDARD 17)
  set_property(TARGET Oving1b PROPERTY CXX_STANDARD 17)
endif()

if (MSVC)
    # Use MSVC-specific flags
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")
else ()
    # Use GCC/Clang flags for non-Windows platforms
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
endif ()


#Added this to make my cpp file be able to open the temps.txt, wouldn't work with just "temps.txt"
# Get the source directory (location of CMakeLists.txt)
get_filename_component(SOURCE_DIR "${CMAKE_CURRENT_LIST_DIR}" ABSOLUTE)

# Construct the full path to temps.txt
set(TEMPS_FILE_PATH "${SOURCE_DIR}/temps.txt")

# Pass the TEMPS_FILE_PATH as a preprocessor definition
target_compile_definitions(Oving1b PRIVATE TEMPS_FILE_PATH="${TEMPS_FILE_PATH}")